<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \App\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\User' . "\0" . 'id', '' . "\0" . 'App\\Entity\\User' . "\0" . 'email', '' . "\0" . 'App\\Entity\\User' . "\0" . 'roles', '' . "\0" . 'App\\Entity\\User' . "\0" . 'password', '' . "\0" . 'App\\Entity\\User' . "\0" . 'name', '' . "\0" . 'App\\Entity\\User' . "\0" . 'firstname', '' . "\0" . 'App\\Entity\\User' . "\0" . 'adress', '' . "\0" . 'App\\Entity\\User' . "\0" . 'zipCode', '' . "\0" . 'App\\Entity\\User' . "\0" . 'city', '' . "\0" . 'App\\Entity\\User' . "\0" . 'phoneNumber', '' . "\0" . 'App\\Entity\\User' . "\0" . 'CPSNumber', 'cpsCardOwner', '' . "\0" . 'App\\Entity\\User' . "\0" . 'surgicalSpeciality', '' . "\0" . 'App\\Entity\\User' . "\0" . 'fkRole', '' . "\0" . 'App\\Entity\\User' . "\0" . 'surgery', '' . "\0" . 'App\\Entity\\User' . "\0" . 'clinic', '' . "\0" . 'App\\Entity\\User' . "\0" . 'fkavailability', '' . "\0" . 'App\\Entity\\User' . "\0" . 'surgeryNotifications', '' . "\0" . 'App\\Entity\\User' . "\0" . 'InstantAvailability'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\User' . "\0" . 'id', '' . "\0" . 'App\\Entity\\User' . "\0" . 'email', '' . "\0" . 'App\\Entity\\User' . "\0" . 'roles', '' . "\0" . 'App\\Entity\\User' . "\0" . 'password', '' . "\0" . 'App\\Entity\\User' . "\0" . 'name', '' . "\0" . 'App\\Entity\\User' . "\0" . 'firstname', '' . "\0" . 'App\\Entity\\User' . "\0" . 'adress', '' . "\0" . 'App\\Entity\\User' . "\0" . 'zipCode', '' . "\0" . 'App\\Entity\\User' . "\0" . 'city', '' . "\0" . 'App\\Entity\\User' . "\0" . 'phoneNumber', '' . "\0" . 'App\\Entity\\User' . "\0" . 'CPSNumber', 'cpsCardOwner', '' . "\0" . 'App\\Entity\\User' . "\0" . 'surgicalSpeciality', '' . "\0" . 'App\\Entity\\User' . "\0" . 'fkRole', '' . "\0" . 'App\\Entity\\User' . "\0" . 'surgery', '' . "\0" . 'App\\Entity\\User' . "\0" . 'clinic', '' . "\0" . 'App\\Entity\\User' . "\0" . 'fkavailability', '' . "\0" . 'App\\Entity\\User' . "\0" . 'surgeryNotifications', '' . "\0" . 'App\\Entity\\User' . "\0" . 'InstantAvailability'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail(string $email): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserIdentifier(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserIdentifier', []);

        return parent::getUserIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function setRoles(array $roles): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoles', [$roles]);

        return parent::setRoles($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword(string $password): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', []);

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function getName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName(string $name): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstname(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstname', []);

        return parent::getFirstname();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstname(string $firstname): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstname', [$firstname]);

        return parent::setFirstname($firstname);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdress(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdress', []);

        return parent::getAdress();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdress(string $adress): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdress', [$adress]);

        return parent::setAdress($adress);
    }

    /**
     * {@inheritDoc}
     */
    public function getZipCode(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getZipCode', []);

        return parent::getZipCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setZipCode(string $zipCode): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setZipCode', [$zipCode]);

        return parent::setZipCode($zipCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getCity(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCity', []);

        return parent::getCity();
    }

    /**
     * {@inheritDoc}
     */
    public function setCity(string $city): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCity', [$city]);

        return parent::setCity($city);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhoneNumber(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhoneNumber', []);

        return parent::getPhoneNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhoneNumber(?string $phoneNumber): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhoneNumber', [$phoneNumber]);

        return parent::setPhoneNumber($phoneNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getCpsCardOwner(): ?\App\Entity\CpsCardOwner
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCpsCardOwner', []);

        return parent::getCpsCardOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function setCpsCardOwner(?\App\Entity\CpsCardOwner $cpsCardOwner)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCpsCardOwner', [$cpsCardOwner]);

        return parent::setCpsCardOwner($cpsCardOwner);
    }

    /**
     * {@inheritDoc}
     */
    public function getSurgicalSpeciality(): ?\App\Entity\SurgicalSpecialty
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSurgicalSpeciality', []);

        return parent::getSurgicalSpeciality();
    }

    /**
     * {@inheritDoc}
     */
    public function setSurgicalSpeciality(?\App\Entity\SurgicalSpecialty $surgicalSpeciality): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSurgicalSpeciality', [$surgicalSpeciality]);

        return parent::setSurgicalSpeciality($surgicalSpeciality);
    }

    /**
     * {@inheritDoc}
     */
    public function getFkRole(): ?\App\Entity\Role
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFkRole', []);

        return parent::getFkRole();
    }

    /**
     * {@inheritDoc}
     */
    public function setFkRole(?\App\Entity\Role $fkRole): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFkRole', [$fkRole]);

        return parent::setFkRole($fkRole);
    }

    /**
     * {@inheritDoc}
     */
    public function getSurgery(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSurgery', []);

        return parent::getSurgery();
    }

    /**
     * {@inheritDoc}
     */
    public function addSurgery(\App\Entity\SurgeryNotification $surgery): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSurgery', [$surgery]);

        return parent::addSurgery($surgery);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSurgery(\App\Entity\SurgeryNotification $surgery): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSurgery', [$surgery]);

        return parent::removeSurgery($surgery);
    }

    /**
     * {@inheritDoc}
     */
    public function getClinic(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClinic', []);

        return parent::getClinic();
    }

    /**
     * {@inheritDoc}
     */
    public function addClinic(\App\Entity\Clinic $clinic): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addClinic', [$clinic]);

        return parent::addClinic($clinic);
    }

    /**
     * {@inheritDoc}
     */
    public function removeClinic(\App\Entity\Clinic $clinic): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeClinic', [$clinic]);

        return parent::removeClinic($clinic);
    }

    /**
     * {@inheritDoc}
     */
    public function getFkavailability(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFkavailability', []);

        return parent::getFkavailability();
    }

    /**
     * {@inheritDoc}
     */
    public function addFkavailability(\App\Entity\Availability $fkavailability): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFkavailability', [$fkavailability]);

        return parent::addFkavailability($fkavailability);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFkavailability(\App\Entity\Availability $fkavailability): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFkavailability', [$fkavailability]);

        return parent::removeFkavailability($fkavailability);
    }

    /**
     * {@inheritDoc}
     */
    public function getSurgeryNotifications(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSurgeryNotifications', []);

        return parent::getSurgeryNotifications();
    }

    /**
     * {@inheritDoc}
     */
    public function addSurgeryNotification(\App\Entity\SurgeryNotification $surgeryNotification): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSurgeryNotification', [$surgeryNotification]);

        return parent::addSurgeryNotification($surgeryNotification);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSurgeryNotification(\App\Entity\SurgeryNotification $surgeryNotification): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSurgeryNotification', [$surgeryNotification]);

        return parent::removeSurgeryNotification($surgeryNotification);
    }

    /**
     * {@inheritDoc}
     */
    public function getCPSNumber(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCPSNumber', []);

        return parent::getCPSNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setCPSNumber(?int $CPSNumber): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCPSNumber', [$CPSNumber]);

        return parent::setCPSNumber($CPSNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getInstantAvailability(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInstantAvailability', []);

        return parent::getInstantAvailability();
    }

    /**
     * {@inheritDoc}
     */
    public function setInstantAvailability(?string $InstantAvailability): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInstantAvailability', [$InstantAvailability]);

        return parent::setInstantAvailability($InstantAvailability);
    }

}
